<?xml version="1.0" encoding="UTF-8" ?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
   
   	<title>panke.me - Tag: bootstrap</title>
   
   <link>http://panke.me</link>
   <description>I'm a software developer in the game industry, and have been (for better or worse) coding on the Java platform for the last decade. I also do all my own stunts.</description>
   <language>en-us</language>
   <managingEditor>panke</managingEditor>
   <atom:link href="rss" rel="self" type="application/rss+xml" />
   
	<item>
  <title>Bootstrap 3 Upgrade: What I Learned</title>
  <link>http://panke.me/journal/2013/07/31/bootstrap3-upgrade.html</link>
  <author>R.J. Lorimer</author>
  <pubDate>2013-07-31T00:00:00+08:00</pubDate>
  <guid>http://panke.me/journal/2013/07/31/bootstrap3-upgrade.html</guid>
  <description><![CDATA[
     <p>Since the <a href="http://getbootstrap.com/">Bootstrap folks</a> have decided to <a href="http://blog.getbootstrap.com/2013/07/27/bootstrap-3-rc1/">promote Bootstrap 3 RC1 as their default version</a>, I decided to use it to upgrade my site. Along the way I chose to finally fix the responsive layout issues I’ve had since, supposedly, Bootstrap 3 does the whole responsive thing far better than Bootstrap 2 did.</p>

<p>This <a href="https://github.com/twbs/bootstrap/pull/6342">pull request</a> contains a good summary of the changes, so I won’t renumerate them blindly here; but be sure to check them out. I will review some things to keep in mind, however.</p>

<h3 id="grid-system">Grid System</h3>

<p>The grid system has been changed completely. The class names are totally different, and they behave differently now too; especially when considering responsiveness. You really should consider revisiting all of your site scaffolding, as directly porting over may not do as you expect.</p>

<p>That said, if you were using ~unresponsive~ Bootstrap, the closest migration is to use <code>col-# col-lg-#</code> everywhere you previously had <code>span#</code>. This tells Bootstrap to use the same gridding for both the smallest and largest devices.</p>

<p>I fought the new model for a while, and I suspect you might too, but once you can understand it, it can be quite powerful.</p>

<h3 id="button-defaults">Button Defaults</h3>

<p>Aside from the obvious color changes, buttons no longer fallback to default styling when left as just “btn”. You need to now say “btn-default” if you have nothing else. Yes, this will probably require Regex to find on your site everywhere.</p>

<h3 id="other-responsive-details">Other Responsive Details</h3>

<p>There is now a whole series of “responsive” utilty classes that allow you to show/hide different page elements depending on certain page layouts. This is useful for those cases where the natural responsive re-flow is just not cutting it. Examples include <code>visible-sm</code> (only show this element on the smallest container model), and <code>hidden-lg</code> (show this on all but the largest/desktop container model).</p>

<h3 id="form-changes">Form Changes</h3>

<p>The form system now uses 100% of the parent container. This is a significant change from Bootstrap 2, and will impact you in a non-trivial way. Most forms will have to be revisited entirely. For example, I had several forms that used <code>help-inline</code>. That’s now gone!</p>

<h3 id="summary">Summary</h3>

<p>Overall I think that Bootstrap 3 is a move in the right direction for the framework. I do think that it will be a painful transition for many, however. My site is extremely simple on the public side, and it still took quite a while to make the move. More complex sites have a non-negligible migration path in front of them. Like the move from Bootstrap 1 to Bootstrap 2, you need to be prepared for some pain!</p>

  ]]></description>
</item>

</channel>
</rss>